{"title":"Cucumber with Selenium Automation","markdown":{"yaml":{"title":"Cucumber with Selenium Automation","date":"2022-10-07","reading-time":"5 min read","categories":"cucumber","image":"https://cdn-images-1.medium.com/max/1024/0*Rs7QIEXTzwda4wzQ"},"containsRefs":false,"markdown":"\n\n[click here to read this in medium](https://guttikondaparthasai.medium.com/cucumber-with-selenium-automation-2275c72d37dd?source=rss-2c47946b91eb------2)\n\n<p>Project setup for cucumber Selenium automation using page object¬†modal</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*Rs7QIEXTzwda4wzQ\" /><figcaption>Photo by <a href=\"https://unsplash.com/@kaleidico?utm_source=medium&amp;utm_medium=referral\">Kaleidico</a> on¬†<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\">Unsplash</a></figcaption></figure><h4>Steps to be followed¬†‚Üí</h4><ol><li>Create a maven project (I will be using IntelliJ).üõ†</li><li>Add the dependences.üßû‚Äç‚ôÇÔ∏è</li><li>Create the Runner JAVA¬†file.üí°</li><li>Create as per the Runner file structure.‚è≥</li><li>Run tests using feature files¬†‚úÖ</li></ol><h4>Create a maven project in IntelliJ without any dependencies in¬†it</h4><ul><li>Just provide the project name and location to be stored in the process of creation maven¬†project.</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*k6dddU3TyS8CVhAu\" /><figcaption>Photo by <a href=\"https://unsplash.com/es/@unarchive?utm_source=medium&amp;utm_medium=referral\">Jeremy Bezanger</a> on¬†<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\">Unsplash</a></figcaption></figure><h4>Adding Dependences to pom.xml ‚Üí Given pom.xml¬†below</h4><pre><em>&lt;?</em>xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;<em>?&gt;<br /></em>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;<br />  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;<br />  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;<br />  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;<br /><br />  &lt;groupId&gt;org.example&lt;/groupId&gt;<br />  &lt;artifactId&gt;amazon-automation&lt;/artifactId&gt;<br />  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;<br /><br />  &lt;properties&gt;<br />    &lt;maven.compiler.source&gt;16&lt;/maven.compiler.source&gt;<br />    &lt;maven.compiler.target&gt;16&lt;/maven.compiler.target&gt;<br />  &lt;/properties&gt;<br /><br />  &lt;dependencies&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;org.seleniumhq.selenium&lt;/groupId&gt;<br />      &lt;artifactId&gt;selenium-java&lt;/artifactId&gt;<br />      &lt;version&gt;4.3.0&lt;/version&gt;<br />    &lt;/dependency&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;io.cucumber&lt;/groupId&gt;<br />      &lt;artifactId&gt;cucumber-gherkin&lt;/artifactId&gt;<br />      &lt;version&gt;7.6.0&lt;/version&gt;<br />    &lt;/dependency&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;org.testng&lt;/groupId&gt;<br />      &lt;artifactId&gt;testng&lt;/artifactId&gt;<br />      &lt;version&gt;6.14.3&lt;/version&gt;<br />    &lt;/dependency&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;io.cucumber&lt;/groupId&gt;<br />      &lt;artifactId&gt;cucumber-testng&lt;/artifactId&gt;<br />      &lt;version&gt;7.6.0&lt;/version&gt;<br />    &lt;/dependency&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;org.seleniumhq.selenium&lt;/groupId&gt;<br />      &lt;artifactId&gt;selenium-chrome-driver&lt;/artifactId&gt;<br />      &lt;version&gt;4.3.0&lt;/version&gt;<br />    &lt;/dependency&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;io.cucumber&lt;/groupId&gt;<br />      &lt;artifactId&gt;cucumber-gherkin&lt;/artifactId&gt;<br />      &lt;version&gt;7.6.0&lt;/version&gt;<br />    &lt;/dependency&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;io.cucumber&lt;/groupId&gt;<br />      &lt;artifactId&gt;cucumber-java&lt;/artifactId&gt;<br />      &lt;version&gt;7.6.0&lt;/version&gt;<br />    &lt;/dependency&gt;<br />  &lt;/dependencies&gt;<br /><br />&lt;/project&gt;</pre><p>As per the given pom.xml file add the dependencies.</p><h4>Add Runner.JAVA to the project¬†‚Üí</h4><p>Runner.java</p><pre>@CucumberOptions(<br />    features = &quot;<strong>src/test/resources/features</strong>&quot;,<br />    glue = &quot;<strong>StepDefinitions</strong>&quot;,<br />    plugin = {<br />        &quot;pretty&quot;,<br />        &quot;html:target/cucumber-reports/cucumber-pretty&quot;,<br />        &quot;json:target/cucumber-reports/CucumberTestReport.json&quot;,<br />        &quot;timeline:target/test-output-thread/&quot;<br />    }<br />)<br />public class Runner extends AbstractTestNGCucumberTests {<br /><br /><br /><br />  @Override<br />  @DataProvider(parallel = true)<br />  public Object[][] scenarios() {<br />    return super.scenarios();<br />  }<br /><br />  @BeforeSuite<br />  public void beforeSuite() {<br />    System.<em>out</em>.println(&quot;================ BEFORE SUITE==========&quot;);<br />  }<br /><br />  @AfterSuite<br />  public void afterSuite() {<br />    System.<em>out</em>.println(&quot;================ AFTER SUITE ==========&quot;);<br />  }<br />}</pre><ul><li>In the above file we need to specify the path there the feature files are located in the project.(<strong>src/test/resources/features</strong>)</li><li>Also we have to mention the package name there the steps will be writen in the project.(<strong>StepDefinitions</strong>)</li></ul><h4>Create page object modals¬†‚Üí</h4><ul><li>Make BasePage class to place common methods which can be used to all the page¬†classes.</li></ul><pre>public class BasePage {<br />  private static WebDriver <em>driver</em>;<br />  public static final int <em>TIMEOUT_PERIOD_LONG </em>= 30;<br /><br />  public BasePage(WebDriver driver) {<br />    this.<em>driver </em>= driver;<br />  }<br /><br />  public WebElement waitForElement(By element, long timeout) {<br />    WebElement myElement = null;<br />    try {<br />      myElement = new WebDriverWait(<em>driver</em>, Duration.<em>ofSeconds</em>(timeout)).until(ExpectedConditions.<em>visibilityOfElementLocated</em>(element));<br />    } catch (TimeoutException toe) {<br />      System.<em>out</em>.println(toe);<br />    } finally {<br />      if (myElement == null) {<br />        String str = &quot;Unable to find the WebElement in the web page by using its locator&quot;;<br />        System.<em>out</em>.println(str);<br />      }<br />    }<br />    return myElement;<br />  }<br /><br />  public void waitForElementToBeVisible(ById element){<br />    WebElement myElement = new WebDriverWait(<em>driver</em>, Duration.<em>ofSeconds</em>(5)).until(ExpectedConditions.<em>visibilityOfElementLocated</em>(element));<br />    WebDriverWait wait= new WebDriverWait(<em>driver</em>,Duration.<em>ofSeconds</em>(5));<br />    wait.until(ExpectedConditions.<em>visibilityOf</em>(myElement));<br />  }<br /><br />  public void waitForElementToBeVisible(ByXPath element){<br />    WebElement myElement = new WebDriverWait(<em>driver</em>, Duration.<em>ofSeconds</em>(5)).until(ExpectedConditions.<em>visibilityOfElementLocated</em>(element));<br />    WebDriverWait wait= new WebDriverWait(<em>driver</em>,Duration.<em>ofSeconds</em>(5));<br />    wait.until(ExpectedConditions.<em>visibilityOf</em>(myElement));<br />  }<br />}</pre><ul><li>Creating page class like shown below. all the page classes will be extending the BasePage¬†class.</li></ul><pre>public class HomePage extends BasePage {<br />  public HomePage(WebDriver driver) {<br />    super(driver);<br />    PageFactory.<em>initElements</em>(driver, this);<br />  }<br /><br />  public final ById searchInput = new ById(&quot;twotabsearchtextbox&quot;);<br /><br />  public WebElement getSearchInput() {<br />    return waitForElement(searchInput,30);<br />  }<br /><br />  public void waitTillSearchVisible() {<br />    waitForElementToBeVisible(searchInput);<br />  }<br />}</pre><p>SearchResultPage.class</p><pre>public class SearchResultPage extends BasePage {</pre><pre>public SearchResultPage(WebDriver driver) {<br />        super(driver);<br />        PageFactory.initElements(driver, this);<br />    }</pre><pre>public final ById logoBtn = new ById(&quot;nav-logo-sprites&quot;);</pre><pre>public final ByXPath item = new ByXPath(&quot;/html/body/div[1]/div[2]/div[1]/div[1]/div/span[3]/div[2]/div[4]/div/div/div/div/div[2]/div[2]/h2/a&quot;);</pre><pre>public WebElement getItem() {<br />        return waitForElement(item, 30);<br />    }</pre><pre>public WebElement getLogoBtn() {<br />        return waitForElement(logoBtn, 30);<br />    }</pre><pre>public void waitTillLogoVisible() {<br />        waitForElementToBeVisible(logoBtn);<br />    }<br />}</pre><p>Now we need to create a package stepdefinition and write all the steps which will be used in feature¬†file.</p><p>Hooks.java</p><pre>public class Hooks {<br />    public static WebDriver driver;</pre><pre><a href=\"http://twitter.com/Before\">@Before</a><br />    public void OpenDriver() {<br />        System.setProperty(&quot;webdriver.chrome.driver&quot;, &quot;src/test/resources/drivers/mac/chromedriver&quot;);<br />        driver = new ChromeDriver();<br />    }</pre><pre><a href=\"http://twitter.com/After\">@After</a><br />    public void closeDriver() {<br />        driver.close();<br />    }<br />}</pre><p>HomePageSteps.java</p><pre>public class HomePageSteps {</pre><pre>private final HomePage homePage;</pre><pre>public HomePageSteps() {<br />        this.homePage = PageObjectManager.pageFactory().getHomePage(Hooks.driver);<br />    }</pre><pre><a href=\"http://twitter.com/Given\">@Given</a>(&quot;I'm on amazon&quot;)<br />    public void onAmazon() {<br />        Hooks.driver.get(&quot;<a href=\"https://www.amazon.com/\">https://www.amazon.com/</a>&quot;);<br />        this.homePage.waitTillSearchVisible();<br />    }</pre><pre><a href=\"http://twitter.com/When\">@When</a>(&quot;I select Search for {string}&quot;)<br />    public void enterSearch(String enterText) {<br />        WebElement searchInput = this.homePage.getSearchInput();<br />        searchInput.clear();<br />        searchInput.sendKeys(enterText);<br />        searchInput.sendKeys(Keys.ENTER);<br />    }<br />}</pre><p>SearchPageSteps.java</p><pre>public class SearchPageSteps {<br />    public final SearchResultPage searchResultPage;</pre><pre>public SearchPageSteps() {<br />        this.searchResultPage = PageObjectManager.pageFactory().getSearchResultPage(Hooks.driver);<br />    }</pre><pre><a href=\"http://twitter.com/Then\">@Then</a>(&quot;I'm on result page&quot;)<br />    public void onResultPage() {<br />        this.searchResultPage.waitTillLogoVisible();<br />    }</pre><pre><a href=\"http://twitter.com/And\">@And</a>(&quot;I click on item&quot;)<br />    public void clickOnItem() throws InterruptedException {<br />        WebElement btn = this.searchResultPage.getItem();<br />        btn.click();<br />        Hooks.driver.wait(300);<br />    }<br />}</pre><h3>Features file</h3><pre>Feature: Search item <br />Scenario: Search for given item<br />   Given I'm on amazon<br />   When I select Search for &quot;jackets&quot;<br />   Then I'm on result page  <br />   And I click on item</pre><p>Now according to the statements in feature file Steps will be executed.</p><p>complete code is available at <a href=\"https://github.com/propardhu/cucumber-selenium\">https://github.com/propardhu/cucumber-selenium</a>¬†‚Ä¶!</p><img alt=\"\" height=\"1\" src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=2275c72d37dd\" width=\"1\" />\n","srcMarkdownNoYaml":"\n\n[click here to read this in medium](https://guttikondaparthasai.medium.com/cucumber-with-selenium-automation-2275c72d37dd?source=rss-2c47946b91eb------2)\n\n<p>Project setup for cucumber Selenium automation using page object¬†modal</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*Rs7QIEXTzwda4wzQ\" /><figcaption>Photo by <a href=\"https://unsplash.com/@kaleidico?utm_source=medium&amp;utm_medium=referral\">Kaleidico</a> on¬†<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\">Unsplash</a></figcaption></figure><h4>Steps to be followed¬†‚Üí</h4><ol><li>Create a maven project (I will be using IntelliJ).üõ†</li><li>Add the dependences.üßû‚Äç‚ôÇÔ∏è</li><li>Create the Runner JAVA¬†file.üí°</li><li>Create as per the Runner file structure.‚è≥</li><li>Run tests using feature files¬†‚úÖ</li></ol><h4>Create a maven project in IntelliJ without any dependencies in¬†it</h4><ul><li>Just provide the project name and location to be stored in the process of creation maven¬†project.</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*k6dddU3TyS8CVhAu\" /><figcaption>Photo by <a href=\"https://unsplash.com/es/@unarchive?utm_source=medium&amp;utm_medium=referral\">Jeremy Bezanger</a> on¬†<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\">Unsplash</a></figcaption></figure><h4>Adding Dependences to pom.xml ‚Üí Given pom.xml¬†below</h4><pre><em>&lt;?</em>xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;<em>?&gt;<br /></em>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;<br />  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;<br />  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;<br />  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;<br /><br />  &lt;groupId&gt;org.example&lt;/groupId&gt;<br />  &lt;artifactId&gt;amazon-automation&lt;/artifactId&gt;<br />  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;<br /><br />  &lt;properties&gt;<br />    &lt;maven.compiler.source&gt;16&lt;/maven.compiler.source&gt;<br />    &lt;maven.compiler.target&gt;16&lt;/maven.compiler.target&gt;<br />  &lt;/properties&gt;<br /><br />  &lt;dependencies&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;org.seleniumhq.selenium&lt;/groupId&gt;<br />      &lt;artifactId&gt;selenium-java&lt;/artifactId&gt;<br />      &lt;version&gt;4.3.0&lt;/version&gt;<br />    &lt;/dependency&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;io.cucumber&lt;/groupId&gt;<br />      &lt;artifactId&gt;cucumber-gherkin&lt;/artifactId&gt;<br />      &lt;version&gt;7.6.0&lt;/version&gt;<br />    &lt;/dependency&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;org.testng&lt;/groupId&gt;<br />      &lt;artifactId&gt;testng&lt;/artifactId&gt;<br />      &lt;version&gt;6.14.3&lt;/version&gt;<br />    &lt;/dependency&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;io.cucumber&lt;/groupId&gt;<br />      &lt;artifactId&gt;cucumber-testng&lt;/artifactId&gt;<br />      &lt;version&gt;7.6.0&lt;/version&gt;<br />    &lt;/dependency&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;org.seleniumhq.selenium&lt;/groupId&gt;<br />      &lt;artifactId&gt;selenium-chrome-driver&lt;/artifactId&gt;<br />      &lt;version&gt;4.3.0&lt;/version&gt;<br />    &lt;/dependency&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;io.cucumber&lt;/groupId&gt;<br />      &lt;artifactId&gt;cucumber-gherkin&lt;/artifactId&gt;<br />      &lt;version&gt;7.6.0&lt;/version&gt;<br />    &lt;/dependency&gt;<br />    &lt;dependency&gt;<br />      &lt;groupId&gt;io.cucumber&lt;/groupId&gt;<br />      &lt;artifactId&gt;cucumber-java&lt;/artifactId&gt;<br />      &lt;version&gt;7.6.0&lt;/version&gt;<br />    &lt;/dependency&gt;<br />  &lt;/dependencies&gt;<br /><br />&lt;/project&gt;</pre><p>As per the given pom.xml file add the dependencies.</p><h4>Add Runner.JAVA to the project¬†‚Üí</h4><p>Runner.java</p><pre>@CucumberOptions(<br />    features = &quot;<strong>src/test/resources/features</strong>&quot;,<br />    glue = &quot;<strong>StepDefinitions</strong>&quot;,<br />    plugin = {<br />        &quot;pretty&quot;,<br />        &quot;html:target/cucumber-reports/cucumber-pretty&quot;,<br />        &quot;json:target/cucumber-reports/CucumberTestReport.json&quot;,<br />        &quot;timeline:target/test-output-thread/&quot;<br />    }<br />)<br />public class Runner extends AbstractTestNGCucumberTests {<br /><br /><br /><br />  @Override<br />  @DataProvider(parallel = true)<br />  public Object[][] scenarios() {<br />    return super.scenarios();<br />  }<br /><br />  @BeforeSuite<br />  public void beforeSuite() {<br />    System.<em>out</em>.println(&quot;================ BEFORE SUITE==========&quot;);<br />  }<br /><br />  @AfterSuite<br />  public void afterSuite() {<br />    System.<em>out</em>.println(&quot;================ AFTER SUITE ==========&quot;);<br />  }<br />}</pre><ul><li>In the above file we need to specify the path there the feature files are located in the project.(<strong>src/test/resources/features</strong>)</li><li>Also we have to mention the package name there the steps will be writen in the project.(<strong>StepDefinitions</strong>)</li></ul><h4>Create page object modals¬†‚Üí</h4><ul><li>Make BasePage class to place common methods which can be used to all the page¬†classes.</li></ul><pre>public class BasePage {<br />  private static WebDriver <em>driver</em>;<br />  public static final int <em>TIMEOUT_PERIOD_LONG </em>= 30;<br /><br />  public BasePage(WebDriver driver) {<br />    this.<em>driver </em>= driver;<br />  }<br /><br />  public WebElement waitForElement(By element, long timeout) {<br />    WebElement myElement = null;<br />    try {<br />      myElement = new WebDriverWait(<em>driver</em>, Duration.<em>ofSeconds</em>(timeout)).until(ExpectedConditions.<em>visibilityOfElementLocated</em>(element));<br />    } catch (TimeoutException toe) {<br />      System.<em>out</em>.println(toe);<br />    } finally {<br />      if (myElement == null) {<br />        String str = &quot;Unable to find the WebElement in the web page by using its locator&quot;;<br />        System.<em>out</em>.println(str);<br />      }<br />    }<br />    return myElement;<br />  }<br /><br />  public void waitForElementToBeVisible(ById element){<br />    WebElement myElement = new WebDriverWait(<em>driver</em>, Duration.<em>ofSeconds</em>(5)).until(ExpectedConditions.<em>visibilityOfElementLocated</em>(element));<br />    WebDriverWait wait= new WebDriverWait(<em>driver</em>,Duration.<em>ofSeconds</em>(5));<br />    wait.until(ExpectedConditions.<em>visibilityOf</em>(myElement));<br />  }<br /><br />  public void waitForElementToBeVisible(ByXPath element){<br />    WebElement myElement = new WebDriverWait(<em>driver</em>, Duration.<em>ofSeconds</em>(5)).until(ExpectedConditions.<em>visibilityOfElementLocated</em>(element));<br />    WebDriverWait wait= new WebDriverWait(<em>driver</em>,Duration.<em>ofSeconds</em>(5));<br />    wait.until(ExpectedConditions.<em>visibilityOf</em>(myElement));<br />  }<br />}</pre><ul><li>Creating page class like shown below. all the page classes will be extending the BasePage¬†class.</li></ul><pre>public class HomePage extends BasePage {<br />  public HomePage(WebDriver driver) {<br />    super(driver);<br />    PageFactory.<em>initElements</em>(driver, this);<br />  }<br /><br />  public final ById searchInput = new ById(&quot;twotabsearchtextbox&quot;);<br /><br />  public WebElement getSearchInput() {<br />    return waitForElement(searchInput,30);<br />  }<br /><br />  public void waitTillSearchVisible() {<br />    waitForElementToBeVisible(searchInput);<br />  }<br />}</pre><p>SearchResultPage.class</p><pre>public class SearchResultPage extends BasePage {</pre><pre>public SearchResultPage(WebDriver driver) {<br />        super(driver);<br />        PageFactory.initElements(driver, this);<br />    }</pre><pre>public final ById logoBtn = new ById(&quot;nav-logo-sprites&quot;);</pre><pre>public final ByXPath item = new ByXPath(&quot;/html/body/div[1]/div[2]/div[1]/div[1]/div/span[3]/div[2]/div[4]/div/div/div/div/div[2]/div[2]/h2/a&quot;);</pre><pre>public WebElement getItem() {<br />        return waitForElement(item, 30);<br />    }</pre><pre>public WebElement getLogoBtn() {<br />        return waitForElement(logoBtn, 30);<br />    }</pre><pre>public void waitTillLogoVisible() {<br />        waitForElementToBeVisible(logoBtn);<br />    }<br />}</pre><p>Now we need to create a package stepdefinition and write all the steps which will be used in feature¬†file.</p><p>Hooks.java</p><pre>public class Hooks {<br />    public static WebDriver driver;</pre><pre><a href=\"http://twitter.com/Before\">@Before</a><br />    public void OpenDriver() {<br />        System.setProperty(&quot;webdriver.chrome.driver&quot;, &quot;src/test/resources/drivers/mac/chromedriver&quot;);<br />        driver = new ChromeDriver();<br />    }</pre><pre><a href=\"http://twitter.com/After\">@After</a><br />    public void closeDriver() {<br />        driver.close();<br />    }<br />}</pre><p>HomePageSteps.java</p><pre>public class HomePageSteps {</pre><pre>private final HomePage homePage;</pre><pre>public HomePageSteps() {<br />        this.homePage = PageObjectManager.pageFactory().getHomePage(Hooks.driver);<br />    }</pre><pre><a href=\"http://twitter.com/Given\">@Given</a>(&quot;I'm on amazon&quot;)<br />    public void onAmazon() {<br />        Hooks.driver.get(&quot;<a href=\"https://www.amazon.com/\">https://www.amazon.com/</a>&quot;);<br />        this.homePage.waitTillSearchVisible();<br />    }</pre><pre><a href=\"http://twitter.com/When\">@When</a>(&quot;I select Search for {string}&quot;)<br />    public void enterSearch(String enterText) {<br />        WebElement searchInput = this.homePage.getSearchInput();<br />        searchInput.clear();<br />        searchInput.sendKeys(enterText);<br />        searchInput.sendKeys(Keys.ENTER);<br />    }<br />}</pre><p>SearchPageSteps.java</p><pre>public class SearchPageSteps {<br />    public final SearchResultPage searchResultPage;</pre><pre>public SearchPageSteps() {<br />        this.searchResultPage = PageObjectManager.pageFactory().getSearchResultPage(Hooks.driver);<br />    }</pre><pre><a href=\"http://twitter.com/Then\">@Then</a>(&quot;I'm on result page&quot;)<br />    public void onResultPage() {<br />        this.searchResultPage.waitTillLogoVisible();<br />    }</pre><pre><a href=\"http://twitter.com/And\">@And</a>(&quot;I click on item&quot;)<br />    public void clickOnItem() throws InterruptedException {<br />        WebElement btn = this.searchResultPage.getItem();<br />        btn.click();<br />        Hooks.driver.wait(300);<br />    }<br />}</pre><h3>Features file</h3><pre>Feature: Search item <br />Scenario: Search for given item<br />   Given I'm on amazon<br />   When I select Search for &quot;jackets&quot;<br />   Then I'm on result page  <br />   And I click on item</pre><p>Now according to the statements in feature file Steps will be executed.</p><p>complete code is available at <a href=\"https://github.com/propardhu/cucumber-selenium\">https://github.com/propardhu/cucumber-selenium</a>¬†‚Ä¶!</p><img alt=\"\" height=\"1\" src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=2275c72d37dd\" width=\"1\" />\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"2022-10-07-cucumber-with-selenium-automation.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.56","theme":{"light":["simplex","styles.scss"],"dark":["superhero","styles.scss"]},"toc-location":"left","title":"Cucumber with Selenium Automation","date":"2022-10-07","reading-time":"5 min read","categories":"cucumber","image":"https://cdn-images-1.medium.com/max/1024/0*Rs7QIEXTzwda4wzQ"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}